@page "/registerpage"
@using MBCM_PWA.Client.Shared.Models;
@using System.Text.Json;
@inject HttpClient httpClient
@inject NavigationManager NavigationManager
@inject userService UserService

<PageTitle>Login</PageTitle>

<body>
    <div class="main-logo">
        <img id="logo" src="/css/MBCM_LOGO.png" alt="Logo" style="width:250px; height:auto" />
    </div>
    <div class="login-container">
        <div class="login-form">
            <h1 class="text-center" style="color: white">Please enter your information</h1>

            <div class="row mb-3">
                @* /* EMAIL */ *@
                <label class="col-sm-3 col-form-label">
                    <img src="/css/email-icon.png" alt="Email Icon" class="mr-2 small-icon"> Email:
                </label>
                <div class="col-sm-6">
                    <div class="shadow-sm">
                        <input type="text" class="form-control form-control-sm" name="Email" id="Email" @bind="model.Email" />
                    </div>
                </div>
            </div>
            <br />
            <div class="row mb-3">
                @* /* FIRST NAME */ *@
                <label class="col-sm-3 col-form-label">
                    <img src="/css/firstname-icon.png" alt="Password Icon" class="mr-2 small-icon"> First Name:
                </label>
                <div class="col-sm-6">
                    <div class="shadow-sm">
                        <input type="text" class="form-control form-control-sm" name="FirstName" id="FirstName" @bind="model.FirstName" />
                    </div>
                </div>
            </div>
            <br />
            <div class="row mb-3">
                @* /* LAST NAME */ *@
                <label class="col-sm-3 col-form-label">
                    <img src="/css/lastname-icon.png" alt="Email Icon" class="mr-2 small-icon"> Last Name:
                </label>
                <div class="col-sm-6">
                    <div class="shadow-sm">
                        <input type="text" class="form-control form-control-sm" name="LastName" id="LastName" @bind="model.LastName" />
                    </div>
                </div>
            </div>
            <br />
            <div class="row mb-3">
                @* /* Biography/ Description */ *@
                <label class="col-sm-3 col-form-label">
                    <img src="/css/bio-icon.png" alt="Password Icon" class="mr-2 small-icon"> Bio/Description:
                </label>
                <div class="col-sm-6">
                    <div class="shadow-sm">
                        <textarea id="Bio" name="Bio" @bind="model.Bio" rows="5" cols="43">...</textarea>
                    </div>
                </div>
            </div>
            <br />
            <div class="row mb-3">
                @* /* PHONE NUMBER */ *@
                <label class="col-sm-3 col-form-label">
                    <img src="/css/email-icon.png" alt="Email Icon" class="mr-2 small-icon"> Phone Number:
                </label>
                <div class="col-sm-6">
                    <div class="shadow-sm">
                        <input type="text" class="form-control form-control-sm" name="PhoneNum" id="PhoneNum" @bind="model.PhoneNum" />
                    </div>
                </div>
            </div>
            <div class="row mb-3">
                @* /* PASSWORD */ *@
                <label class="col-sm-3 col-form-label">
                    <img src="/css/email-icon.png" alt="Email Icon" class="mr-2 small-icon"> Password:
                </label>
                <div class="col-sm-6">
                    <div class="shadow-sm">
                        <input type="password" class="form-control form-control-sm" name="Password" id="Password" @bind="model.Password" />
                    </div>
                </div>
            </div>

            <div class="row mb-3">
                @* /* CONFIRM PASSWORD */ *@
                <label class="col-sm-3 col-form-label">
                    <img src="/css/email-icon.png" alt="Email Icon" class="mr-2 small-icon"> Conmfirm password :
                </label>
                <div class="col-sm-6">
                    <div class="shadow-sm">
                        <input type="password" class="form-control form-control-sm" name="ConfirmPassword" id="ConfirmPassword" @bind="model.ConfirmPassword" />
                    </div>
                </div>
            </div>

            <div class="text-center">
                <button style="width: 100px" @onclick="RegisterUser" class="btn btn-dark">Register</button>
            </div>
            <br />
        </div>
    </div>
</body>


@code {
    [Parameter] public int UserId { get; set; }

    private UserRegistration model = new UserRegistration();

    private async Task RegisterUser()
    {
        try
        {
            // Validate the password and confirm password match
            if (model.Password != model.ConfirmPassword)
            {
                Console.WriteLine("Password and Confirm Password do not match.");
                // You can display an error message to the user if needed
                return;
            }
            Console.WriteLine($"Model data: {JsonSerializer.Serialize(model)}");

            Console.WriteLine("Before API Call");

            // Call your API endpoint here
            var response = await httpClient.PostAsJsonAsync("api/Projects/register", model);

            Console.WriteLine("After API Call");
            if (!response.IsSuccessStatusCode)
            {
                var errorMessage = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Error: {response.ReasonPhrase}, {errorMessage}");
            }

            if (response.IsSuccessStatusCode)
            {
                Console.WriteLine("User registered successfully!");

                UserService.SetUserId(UserId);
                NavigationManager.NavigateTo($"/projects");
            }
            else
            {
                Console.WriteLine($"Error: {response.ReasonPhrase}");
                // Handle the error as needed, e.g., display an error message to the user
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }
}


<style>
    .main-logo {
        padding: 20px;
        position: relative;
        text-align: center;
    }

    .small-icon {
        width: 30px;
        height: 30px;
        margin-right: 5px;
    }

    body {
        background-image: url("/css/LINKING_ARMS_BLURRED.png");
        background-size: cover;
        background-repeat: no-repeat;
        margin: 0;
    }

    .login-container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 60vh;
    }

    .login-form {
        background-color: rgba(255, 255, 255, 0.1);
        padding: 20px;
        border-radius: 8px;
        backdrop-filter: blur(10px);
        background-image: linear-gradient(to top, #333F50, #495A6D);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
        width: 800px;
        max-width: 90%;
    }

        .login-form label {
            font-weight: bold;
            font-size: 14px;
            color: white;
        }
</style>