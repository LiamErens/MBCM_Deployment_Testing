@page "/projects"
@using System.Net.Http.Json
@using MBCM_PWA.Client.Shared.Models
@using Microsoft.AspNetCore.Components.Web.Extensions
@inject HttpClient HttpClient
@inject userService UserService;

<PageTitle>Projects</PageTitle>

<h1>Active projects</h1>

@* /* PROJECT TILE TEMPLATE STYLING */ *@
@foreach (var projectState in projectStates)
{
    <div class="project-tile">
        <div class="proj-left">
            <div class="title-div"><p>@projectState.Project.prjTitle</p></div>
        </div>
        <div class="proj-right">
            <div class="info-div">
                <img class="info-img" src="/css/calendar.png" alt="location"  />
                <h5 class="info-text">@projectState.Project.prjStartDate.ToShortDateString()</h5>
            </div>
            <div class="info-div">
                <img class="info-img" src="/css/pin.png" alt="location"  />
                <h5 class="info-text">@projectState.Project.prjLocation</h5>
            </div>
            <div class="info-div">
                <img class="info-img" src="/css/group.png"  />
                <h5 class="info-text">Number of Participants</h5>
            </div>
            <div class="participants">
                <img class="members" src="/css/group.png" style="width:20px; height:20px" />
                <h5 class="members-text"></h5>
            </div>
            <div class="proj-btns">
                <button class="btn btn-primary" style="@projectState.ButtonColor" @onclick="() => SendRequest(projectState)">@projectState.ButtonText</button>
            </div>
        </div>
    </div>
}



@code {
    List<ProjectState> projectStates = new List<ProjectState>();
    UserLogin loginModel = new UserLogin(); 

    protected override async Task OnInitializedAsync()
    {
        int? userId = UserService.UserId;
        Console.WriteLine($"UserId: {userId}");

        var projects = await HttpClient.GetFromJsonAsync<List<Project>>("api/projects");
        projectStates = projects.Select(project => new ProjectState
            {
                Project = project,
                ButtonText = "Request to Join",
                ButtonColor = "#1B6EC2",
                UserId = userId.GetValueOrDefault()
            }).ToList();
    }

    public async Task SendRequest(ProjectState projectState)
    {
        // Check if the user is already part of the project
        var userProjects = await HttpClient.GetFromJsonAsync<List<UserProjects>>($"api/projects/user-projects");
        if (userProjects.Any(up => up.userID == UserService.UserId && up.projectID == projectState.Project.ProjectID))
        {
            SetRequestFailedStatus(projectState);
            return; // User is already part of the project, do not send a new request
        }

        // Check if the user has already requested to join
        var existingRequest = await HttpClient.GetFromJsonAsync<List<ProjectRequest>>($"api/projects/project-requests");
        if (existingRequest.Any(req => req.UserID == UserService.UserId && req.ProjectID == projectState.Project.ProjectID))
        {
            SetRequestFailedStatus(projectState);
            return; // User has already requested to join, do not send a new request
        }

        // If the user is not part of the project and has not requested to join, proceed to send a new request
        var response = await HttpClient.PostAsync($"api/projects/send-request/{projectState.Project.ProjectID}?userId={projectState.UserId}", null);

        if (response.IsSuccessStatusCode)
        {
            SetRequestSentStatus(projectState);
        }
        else
        {
            SetRequestFailedStatus(projectState);
        }
    }

    private void SetRequestSentStatus(ProjectState projectState)
    {
        projectState.ButtonText = "Request Sent";
        projectState.ButtonColor = "background-color:#F6B000";
    }

    private void SetRequestFailedStatus(ProjectState projectState)
    {
        projectState.ButtonText = "Request Failed";
        projectState.ButtonColor = "background-color: var(--error-primary)";
    }


    public class ProjectState
    {
        public Project Project { get; set; }
        public string ButtonText { get; set; }
        public string ButtonColor { get; set; }
        public int UserId { get; set; } // Add this property
    }
}

