@page "/adminprojects"
@using System.Net.Http.Json
@using MBCM_PWA.Client.Shared.Models
@using System.Net.Http.Json
@using System.Text.Json
@inject HttpClient HttpClient



<h3>Active Projects:</h3>
<div class="active-grid">
    @{
        var groupedUserProjects = userProjects.GroupBy(up => up.projectID);
    }
    @foreach (var group in groupedUserProjects)
    {
        <div class="project-cell">
            <h4>@group.First().Project.prjTitle</h4>
            <p>@group.First().Project.prjDescription</p>
            <div class="members-dropdown">
                Members:
                @foreach (var userProject in group)
                {
                    <div class="member">
                        @userProject.User.firstName @userProject.User.lastName
                        <button class="btn btn-danger btn-sm" @onclick="() => ConfirmRemoveUserFromProject(userProject.userProjectID)">Remove</button>
                    </div>
                }
            </div>
        </div>
    }
</div>
<!-- Confirmation Modal for Remove User From Project -->
@if (showConfirmation)
{
    <div class="modal" tabindex="-1" style="display: block;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirm Removal</h5>
                    <button type="button" class="btn-close" @onclick="CancelRemoveUserFromProject"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to remove the user from the project?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CancelRemoveUserFromProject">Cancel</button>
                    <button type="button" class="btn btn-danger" @onclick="RemoveUserFromProject">Remove</button>
                </div>
            </div>
        </div>
    </div>
}

<h3>Project Requests</h3>
<div class="request-grid">
    @foreach (var request in projectRequests)
    {
        <div class="project-cell">
            <h4>Project: @request.Project.prjTitle</h4>
            <div>
                <div>User: @request.User.firstName @request.User.lastName</div>
                <div>Bio: @request.User.userBio</div>
                <div>Email: @request.User.userEmail</div>
            </div>
            <div>
                <button class="btn btn-success btn-sm" @onclick="() => AcceptRequest(request)">Accept</button>
                <button class="btn btn-danger btn-sm" @onclick="() => DeclineRequest(request)">Decline</button>
            </div>
        </div>
    }
</div>


<h3>Users</h3>
<div class="active-grid">
    @foreach (var user in users)
    {
        <div class="project-cell">
            <h4>@user.UserID</h4>
            <h4>@user.firstName @user.lastName</h4>
            <h4>@user.userEmail</h4>
            <h4>@user.userPhoneNumber</h4>
            <button class="btn btn-danger btn-sm" @onclick="() => ConfirmRemoveUser(user.UserID)">Remove</button>
        </div>
    }
</div>


<!-- Confirmation Modal for Remove User -->
@if (showUserRemoveConfirmation)
{
    <div class="modal" tabindex="-1" style="display: block;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirm User Removal</h5>
                    <button type="button" class="btn-close" @onclick="CancelRemoveUser"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to remove the user?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CancelRemoveUser">Cancel</button>
                    <button type="button" class="btn btn-danger" @onclick="RemoveUser">Remove</button>
                </div>
            </div>
        </div>
    </div>
}



@code {
    List<Project> projects;
    List<ProjectRequest> projectRequests;
    List<User> users;
    List<UserProjects> userProjects;

    bool showConfirmation;
    int userProjectIdToRemove;
    bool showUserRemoveConfirmation;
    int userIdToRemove;


    protected override async Task OnInitializedAsync()
    {
        projects = await HttpClient.GetFromJsonAsync<List<Project>>("api/projects");
        projectRequests = await HttpClient.GetFromJsonAsync<List<ProjectRequest>>("api/projects/project-requests");
        users = await HttpClient.GetFromJsonAsync<List<User>>("api/projects/users");
        userProjects = await HttpClient.GetFromJsonAsync<List<UserProjects>>("api/projects/user-projects");
    }

    private async Task AcceptRequest(ProjectRequest request)
    {
        await HttpClient.PostAsync($"api/projects/accept-request/{request.RequestID}", null);
        projectRequests.Remove(request);
    }

    private async Task DeclineRequest(ProjectRequest request)
    {
        await HttpClient.PostAsync($"api/projects/decline-request/{request.RequestID}", null);
        projectRequests.Remove(request);
    }
    
    private void ConfirmRemoveUserFromProject(int userProjectID)
    {
        userProjectIdToRemove = userProjectID;
        showConfirmation = true;
    }

    private async Task RemoveUserFromProject()
    {
        await HttpClient.DeleteAsync($"api/projects/remove-user-from-project/{userProjectIdToRemove}");
        userProjects.RemoveAll(up => up.userProjectID == userProjectIdToRemove);
        showConfirmation = false;
    }

    private void CancelRemoveUserFromProject()
    {
        showConfirmation = false;
    }

    private void ConfirmRemoveUser(int userId)
    {
        userIdToRemove = userId;
        showUserRemoveConfirmation = true;
    }

    private async Task RemoveUser()
    {
        await HttpClient.DeleteAsync($"api/projects/remove-user/{userIdToRemove}");
        users.RemoveAll(u => u.UserID == userIdToRemove);
        showUserRemoveConfirmation = false;
    }

    private void CancelRemoveUser()
    {
        showUserRemoveConfirmation = false;
    }
}

