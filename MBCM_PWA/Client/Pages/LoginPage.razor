@layout LoginLayout
@page "/loginpage"
@inject HttpClient httpClient
@using MBCM_PWA.Client.Shared.Models
@inject NavigationManager NavigationManager
@inject userService UserService

<PageTitle>Login</PageTitle>

<body>
    <div class="main-logo">
        <img id="logo" src="/css/MBCM_LOGO.png" alt="Logo" style="width: 300px; height: auto" />
    </div>
    <div class="login-container">
        <div class="login-form">
            <h1 class="text-center" style="color: white">Please enter your information</h1>

            <br />
            <div class="row mb-3">
                @* /* EMAIL */ *@
                <label class="col-sm-3 col-form-label">
                    <img src="/css/email-icon.png" alt="Email Icon" class="mr-2 small-icon"> Email:
                </label>
                <div class="col-sm-6">
                    <div class="shadow-sm">
                        <input type="text" class="form-control form-control-sm" @bind="loginModel.Email" />
                    </div>
                </div>
            </div>
            <div class="row mb-3">
                @* /* PASSWORD */ *@
                <label class="col-sm-3 col-form-label">
                    <img src="/css/password-ico.png" alt="Password Icon" class="mr-2 small-icon"> Password:
                </label>
                <div class="col-sm-6">
                    <div class="shadow-sm">
                        <input type="password" class="form-control form-control-sm" @bind="loginModel.Password" />
                    </div>
                </div>
            </div>

            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger" role="alert">
                    @errorMessage
                </div>
            }

            <br />

            <div class="text-center">
                <button style="width: 100px" @onclick="Login" class="btn btn-dark">Login</button>
            </div>
            <br />
        </div>
    </div>
</body>

@code {
    private UserLogin loginModel = new UserLogin();
    private string errorMessage;

    private async Task Login()
    {
        try
        {
            // Call your API endpoint here
            var response = await httpClient.PostAsJsonAsync("api/Projects/login", loginModel);

            if (response.IsSuccessStatusCode)
            {
                Console.WriteLine("User logged in successfully!");

                // Deserialize the response to get UserId and UserType
                var loginResult = await response.Content.ReadFromJsonAsync<LoginResult>();

                // Store UserId and UserType in UserService
                UserService.SetUserId(loginResult.UserId);
                UserService.SetUserType(loginResult.UserType);

                NavigationManager.NavigateTo($"/projects");
            }
            else
            {
                Console.WriteLine($"Error: {response.ReasonPhrase}");
                errorMessage = "Login failed. Please check your credentials and try again.";
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
            errorMessage = "An unexpected error occurred. Please try again later.";
        }
    }

    // Define a class to represent the login result
    public class LoginResult
    {
        public string Message { get; set; }
        public int UserId { get; set; }
        public string UserType { get; set; }
    }
}

<style>
   
</style>
